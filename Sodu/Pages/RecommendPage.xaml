<Page
    x:Class="Sodu.Pages.RecommendPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Sodu.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:UC="using:Sodu.UC"
    xmlns:converter="using:Sodu.Converter"
    xmlns:vm="using:Sodu.ViewModel"  
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    DataContext="{Binding Instance.RecommendAndHotPageViewModelInstance,Source={ StaticResource  Locator}}"
    xmlns:control="using:Sodu.Controls"
    xmlns:extension="using:SoDu.Core.Extension"
    mc:Ignorable="d" 
    x:Name="root">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Page.Resources>


    <Grid  >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ListView  Grid.Row="0"  ItemContainerStyleSelector="{ThemeResource CustomListViewItemContainerStyleSelector}"   x:Name="updateListBox" Margin="0,0,0,0"   ItemsSource="{Binding RecommendBookList}"        HorizontalAlignment="Stretch" Background="Transparent"   
            >
            <!--<ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical"></VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>-->
            <ListView.ItemTemplate>
                <DataTemplate>
                    <UC:UC_BookListItem x:Name="item" DataContext="{Binding}"    Command="{Binding Instance.RecommendAndHotPageViewModelInstance.BookItemSelectedChangedCommand,Source={ StaticResource  Locator}}"  CommandParameter="{Binding}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <!--<control:PullToRefreshListView  ItemContainerStyle="{StaticResource CustomListViewItemStyle}"  x:Name="updateListBox" Margin="0,0,0,0"   ItemsSource="{Binding UpdateBookList}" PullThreshold="50"    Grid.Row="0"     HorizontalAlignment="Stretch" Background="Transparent"  
           RefreshCommand="{Binding RefreshCommand}" RequestCommand="{Binding RequestCommand}">
            <control:PullToRefreshListView.ItemTemplate>
                <DataTemplate>
                    <UC:UC_BookListItem x:Name="item" DataContext="{Binding}" Margin="0,0,15,0"  />
                </DataTemplate>
            </control:PullToRefreshListView.ItemTemplate>-->
            <!--<control:PullToRefreshListView.RefreshIndicatorContent>
                <Grid  Height="20" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,10">
                    <TextBlock FontSize="16" x:Name="upText"  Visibility="Collapsed">
                        <Run FontWeight="Black">↑</Run>
                        <Run>释放刷新</Run>
                    </TextBlock>
                    <TextBlock FontSize="16" x:Name="downText"  Visibility="Collapsed">
                        <Run FontWeight="Black">↓</Run>
                        <Run>下拉刷新</Run>
                    </TextBlock>
                </Grid>
            </control:PullToRefreshListView.RefreshIndicatorContent>-->
            <Interactivity:Interaction.Behaviors >
                <Core:EventTriggerBehavior   EventName="SelectionChanged">
                    <Core:InvokeCommandAction Command="{Binding  BookItemSelectedChangedCommand}"  CommandParameter="{Binding ElementName=updateListBox,Path=SelectedItem}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ListView>

        <CommandBar  Grid.Row="2"   ClosedDisplayMode="Compact"  IsOpen="False"   Background="{ThemeResource LeftPanelBackground}"  extension:CommandBarExtensions.HideMoreButton="True">
            <AppBarButton Icon="{Binding IsLoading,Converter={StaticResource  RefreshCancleIconConverter}}" Label="{Binding IsLoading,Converter={StaticResource RefreshCancleIconLabelConverter}}"  Command="{Binding RefreshCommand}"/>
        </CommandBar>
        <UC:UC_ProgressRing Grid.ColumnSpan="5" IsActive="{Binding IsLoading}" Grid.RowSpan="5" ></UC:UC_ProgressRing>
    </Grid>

</Page>
